import { Environment } from "../model/Environment";
export default class ContainerBuilder {
    build(container, env, isDebug) {
        this.container = container;
        this.buildDefault(isDebug);
        if (env === Environment.Dev) {
            this.buildDev(isDebug);
            return;
        }
        if (env === Environment.Prod) {
            this.buildProd(isDebug);
            return;
        }
        if (env === Environment.Test) {
            this.buildTest(isDebug);
            return;
        }
        this.buildEnv(env, isDebug);
    }
    register(name, init) {
        this.container.register(name, init);
        return this;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGFpbmVyQnVpbGRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9qcy9zcmMvY29yZS9Db250YWluZXJCdWlsZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUdqRCxNQUFNLENBQUMsT0FBTztJQVNILEtBQUssQ0FBQyxTQUFvQixFQUFFLEdBQVcsRUFBRSxPQUFnQjtRQUM1RCxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUUzQixJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTNCLEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ3ZCLE1BQU0sQ0FBQztRQUNYLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxHQUFHLEtBQUssV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDM0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUN4QixNQUFNLENBQUM7UUFDWCxDQUFDO1FBRUQsRUFBRSxDQUFDLENBQUMsR0FBRyxLQUFLLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQzNCLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDeEIsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUVELElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFLTSxRQUFRLENBQUMsSUFBWSxFQUFFLElBQWU7UUFDekMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDaEIsQ0FBQztDQTJCSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RW52aXJvbm1lbnR9IGZyb20gXCIuLi9tb2RlbC9FbnZpcm9ubWVudFwiO1xuaW1wb3J0IENvbnRhaW5lciBmcm9tIFwiLi9Db250YWluZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgYWJzdHJhY3QgY2xhc3MgQ29udGFpbmVyQnVpbGRlciB7XG4gICAgcHJpdmF0ZSBjb250YWluZXI6IENvbnRhaW5lcjtcblxuICAgIC8qKlxuICAgICAqIFVzZWQgdG8gYnVpbGQgdGhlIGNvbnRhaW5lciwgcmVnaXN0ZXJpbmcgYWxsIHRoZSBkZXBlbmRlbmNpZXMgbGlrZSBzZXJ2aWNlcywgZmFjdG9yaWVzLCBwYXJhbWV0ZXJzLCAuLi5cbiAgICAgKlxuICAgICAqIE5PVEU6IERvIG5vdCBvdmVycmlkZSB0aGlzIG1ldGhvZCBkaXJlY3RseSxcbiAgICAgKiB1c2UgdGhlIGRlZGljYXRlZCBwcm90ZWN0ZWQgbWV0aG9kcyBsaWtlIHtAc2VlIGJ1aWxkRGVmYXVsdH0gb3Ige0BzZWUgYnVpbGREZXZ9XG4gICAgICovXG4gICAgcHVibGljIGJ1aWxkKGNvbnRhaW5lcjogQ29udGFpbmVyLCBlbnY6IHN0cmluZywgaXNEZWJ1ZzogYm9vbGVhbik6IHZvaWQge1xuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcblxuICAgICAgICB0aGlzLmJ1aWxkRGVmYXVsdChpc0RlYnVnKTtcblxuICAgICAgICBpZiAoZW52ID09PSBFbnZpcm9ubWVudC5EZXYpIHtcbiAgICAgICAgICAgIHRoaXMuYnVpbGREZXYoaXNEZWJ1Zyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZW52ID09PSBFbnZpcm9ubWVudC5Qcm9kKSB7XG4gICAgICAgICAgICB0aGlzLmJ1aWxkUHJvZChpc0RlYnVnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlbnYgPT09IEVudmlyb25tZW50LlRlc3QpIHtcbiAgICAgICAgICAgIHRoaXMuYnVpbGRUZXN0KGlzRGVidWcpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5idWlsZEVudihlbnYsIGlzRGVidWcpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlZ2lzdGVycyB0aGUgZ2l2ZW4gaXRlbSBpbiB0aGUgY29udGFpbmVyLlxuICAgICAqL1xuICAgIHB1YmxpYyByZWdpc3RlcihuYW1lOiBzdHJpbmcsIGluaXQ6ICgpID0+IGFueSk6IENvbnRhaW5lckJ1aWxkZXIge1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5yZWdpc3RlcihuYW1lLCBpbml0KTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhpcyBidWlsZCBtZXRob2Qgd2lsbCBhbHdheXMgYmUgY2FsbGVkLCBubyBtYXR0ZXIgd2hhdCB0aGUgZW52aXJvbm1lbnQgaXMuXG4gICAgICogT3ZlcnJpZGUgaXQgdG8gcmVnaXN0ZXIgdGhlIHNlcnZpY2VzIHRoYXQgd2lsbCBhbHdheXMgYmUgdXNlZFxuICAgICAqL1xuICAgIHByb3RlY3RlZCBhYnN0cmFjdCBidWlsZERlZmF1bHQoaXNEZWJ1ZzogYm9vbGVhbik6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIGJ1aWxkIG1ldGhvZCBpcyBjYWxsZWQgd2hlbiB0aGUgXCJkZXZcIiBlbnZpcm9ubWVudCBpcyB7QHNlZSBFbnZpcm9ubWVudC5EZXZ9XG4gICAgICovXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IGJ1aWxkRGV2KGlzRGVidWc6IGJvb2xlYW4pOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogVGhpcyBidWlsZCBtZXRob2QgaXMgY2FsbGVkIHdoZW4gdGhlIFwicHJvZFwiIGVudmlyb25tZW50IGlzIHtAc2VlIEVudmlyb25tZW50LlByb2R9XG4gICAgICovXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IGJ1aWxkUHJvZChpc0RlYnVnOiBib29sZWFuKTogdm9pZDtcblxuICAgIC8qKlxuICAgICAqIFRoaXMgYnVpbGQgbWV0aG9kIGlzIGNhbGxlZCB3aGVuIHRoZSBcInRlc3RcIiBlbnZpcm9ubWVudCBpcyB7QHNlZSBFbnZpcm9ubWVudC5UZXN0fVxuICAgICAqL1xuICAgIHByb3RlY3RlZCBhYnN0cmFjdCBidWlsZFRlc3QoaXNEZWJ1ZzogYm9vbGVhbik6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIGJ1aWxkIG1ldGhvZCBpcyBjYWxsZWQgd2hlbiBhIGN1c3RvbSBlbnZpcm9ubWVudCBpcyBzZXQuXG4gICAgICovXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IGJ1aWxkRW52KGVudjogc3RyaW5nLCBpc0RlYnVnOiBib29sZWFuKTogdm9pZDtcbn1cbiJdfQ==