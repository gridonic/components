import AppService from "../AppService";
export default class DebuggerService extends AppService {
    constructor(enabled) {
        super();
        this._enabled = enabled;
    }
    get enabled() {
        return this._enabled || false;
    }
    set enabled(status) {
        const $root = window.document.documentElement;
        this.enabled = Boolean(status);
        $root.classList[this.enabled ? "add" : "remove"]("debug-mode");
    }
    log(message, typeId = DebuggerService.CORE) {
        if (this.enabled === false) {
            return;
        }
        const output = [];
        const styles = [];
        const type = DebuggerService.TYPE[typeId];
        output.push(`%c${type.emoji}`);
        styles.push(["margin: 0 10px 0 -1.5em"].join(";"));
        output.push(`%c${message}`);
        styles.push(["font-weight: normal", "text-transform: none"].join(";"));
        console.log(output.join(""), ...styles);
    }
    warn(message, options = DebuggerService.WARNING) {
        this.log(message, options);
    }
    error(message, options = DebuggerService.ERROR) {
        this.log(message, options);
    }
    static get TYPE() {
        return [{
                emoji: "üçè",
            }, {
                emoji: "üé≤",
            }, {
                emoji: "üî•",
            }, {
                emoji: "‚ö†Ô∏è",
            }, {
                emoji: "üëçüèª",
            }];
    }
    static get CORE() { return 0; }
    static get ERROR() { return 2; }
    static get WARNING() { return 3; }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVidWdnZXJTZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2pzL3NyYy9zZXJ2aWNlL0RlYnVnL0RlYnVnZ2VyU2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLFVBQVUsTUFBTSxlQUFlLENBQUM7QUFTdkMsTUFBTSxDQUFDLE9BQU8sc0JBQXVCLFNBQVEsVUFBVTtJQUduRCxZQUFZLE9BQWdCO1FBQ3hCLEtBQUssRUFBRSxDQUFDO1FBRVIsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUM7SUFDNUIsQ0FBQztJQU9ELElBQUksT0FBTztRQUNQLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLEtBQUssQ0FBQztJQUNsQyxDQUFDO0lBT0QsSUFBSSxPQUFPLENBQUMsTUFBTTtRQUNkLE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDO1FBRTlDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRy9CLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNuRSxDQUFDO0lBUU0sR0FBRyxDQUFDLE9BQWUsRUFBRSxTQUFpQixlQUFlLENBQUMsSUFBSTtRQUM3RCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDekIsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUVELE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUNsQixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFHbEIsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUcxQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDL0IsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLHlCQUF5QixDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFTbkQsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLE9BQU8sRUFBRSxDQUFDLENBQUM7UUFDNUIsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLHFCQUFxQixFQUFFLHNCQUFzQixDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFHdkUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsTUFBTSxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQVFNLElBQUksQ0FBQyxPQUFlLEVBQUUsT0FBTyxHQUFHLGVBQWUsQ0FBQyxPQUFPO1FBQzFELElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFRTSxLQUFLLENBQUMsT0FBZSxFQUFFLE9BQU8sR0FBRyxlQUFlLENBQUMsS0FBSztRQUN6RCxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQsTUFBTSxLQUFLLElBQUk7UUFDWCxNQUFNLENBQUMsQ0FBQztnQkFDSixLQUFLLEVBQUUsSUFBSTthQUNkLEVBQUU7Z0JBQ0MsS0FBSyxFQUFFLElBQUk7YUFDZCxFQUFFO2dCQUNDLEtBQUssRUFBRSxJQUFJO2FBQ2QsRUFBRTtnQkFDQyxLQUFLLEVBQUUsSUFBSTthQUNkLEVBQUU7Z0JBQ0MsS0FBSyxFQUFFLE1BQU07YUFDaEIsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELE1BQU0sS0FBSyxJQUFJLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFL0IsTUFBTSxLQUFLLEtBQUssS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNoQyxNQUFNLEtBQUssT0FBTyxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0NBRXJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFwcFNlcnZpY2UgZnJvbSBcIi4uL0FwcFNlcnZpY2VcIjtcblxuLyoqXG4gKiBUaGUgRGVidWdnZXIgY29tcG9uZW50IGlzIGEgc2ltcGxlIGRlYnVnZ2luZyBoZWxwZXIuIFVzZSBpdCBmb3IgZXhhbXBsZSB0b1xuICogbG9nIG1lc3NhZ2VzIHRvIHRoZSBjbGllbnQgd2hpY2ggd2lsbCBvbmx5IGJlIHByaW50ZWQgd2hlbiBpbiBkZWJ1ZyBtb2RlLlxuICpcbiAqIFRPRE86IHRha2VuIGZyb20gZXM2LCB0cmFuc2Zvcm0gdG8gcHVyZSB0eXBlc2NyaXB0XG4gKi9cbi8vIHRzbGludDpkaXNhYmxlXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEZWJ1Z2dlclNlcnZpY2UgZXh0ZW5kcyBBcHBTZXJ2aWNlIHtcbiAgICBwcml2YXRlIF9lbmFibGVkOiBib29sZWFuO1xuXG4gICAgY29uc3RydWN0b3IoZW5hYmxlZDogYm9vbGVhbikge1xuICAgICAgICBzdXBlcigpO1xuXG4gICAgICAgIHRoaXMuX2VuYWJsZWQgPSBlbmFibGVkO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiBkZWJ1Z2dpbmcgaXMgZW5hYmxlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxuICAgICAqXG4gICAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBnZXQgZW5hYmxlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2VuYWJsZWQgfHwgZmFsc2U7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRW5hYmxlcyBvciBkaXNhYmxlcyBkZWJ1Z2dpbmcgb3V0cHV0LlxuICAgICAqXG4gICAgICogQHBhcmFtIHtib29sZWFufSBzdGF0dXNcbiAgICAgKi9cbiAgICBzZXQgZW5hYmxlZChzdGF0dXMpIHtcbiAgICAgICAgY29uc3QgJHJvb3QgPSB3aW5kb3cuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IEJvb2xlYW4oc3RhdHVzKTtcblxuICAgICAgICAvLyBEZWxlZ2F0ZSBzdGF0dXMgdG8gQ1NTIGFzIHdlbGxcbiAgICAgICAgJHJvb3QuY2xhc3NMaXN0W3RoaXMuZW5hYmxlZCA/IFwiYWRkXCIgOiBcInJlbW92ZVwiXShcImRlYnVnLW1vZGVcIik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTG9ncyBhIG1lc3NhZ2UgdG8gdGhlIGNsaWVudC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIFRoZSBtZXNzYWdlIHRvIGxvZy5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdHlwZUlkXG4gICAgICovXG4gICAgcHVibGljIGxvZyhtZXNzYWdlOiBzdHJpbmcsIHR5cGVJZDogbnVtYmVyID0gRGVidWdnZXJTZXJ2aWNlLkNPUkUpIHtcbiAgICAgICAgaWYgKHRoaXMuZW5hYmxlZCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG91dHB1dCA9IFtdO1xuICAgICAgICBjb25zdCBzdHlsZXMgPSBbXTtcblxuICAgICAgICAvLyBQcmltaXRpdmUgdHlwZSBnaXZlbj8gUGljayBjb3JyZWN0IHR5cGUgb2JqZWN0IGZyb20gdHlwZXMgdGFibGVcbiAgICAgICAgY29uc3QgdHlwZSA9IERlYnVnZ2VyU2VydmljZS5UWVBFW3R5cGVJZF07XG5cbiAgICAgICAgLy8gRW1vamlcbiAgICAgICAgb3V0cHV0LnB1c2goYCVjJHt0eXBlLmVtb2ppfWApO1xuICAgICAgICBzdHlsZXMucHVzaChbXCJtYXJnaW46IDAgMTBweCAwIC0xLjVlbVwiXS5qb2luKFwiO1wiKSk7XG5cbiAgICAgICAgLy8gLy8gSWYgdGhlcmUgaXMgYSBsYWJlbCBnaXZlbiwgYWRkIGl0XG4gICAgICAgIC8vIGlmIChvcHRpb25zLmxhYmVsKSB7XG4gICAgICAgIC8vICAgICBvdXRwdXQucHVzaChgJWNbJHtvcHRpb25zLmxhYmVsfV1gKTtcbiAgICAgICAgLy8gICAgIHN0eWxlcy5wdXNoKFtcIm1hcmdpbi1yaWdodDogNnB4XCIsIFwiZm9udC13ZWlnaHQ6IGJvbGRcIiwgXCJ0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlXCJdLmpvaW4oXCI7XCIpKTtcbiAgICAgICAgLy8gfVxuXG4gICAgICAgIC8vIE1lc3NhZ2VcbiAgICAgICAgb3V0cHV0LnB1c2goYCVjJHttZXNzYWdlfWApO1xuICAgICAgICBzdHlsZXMucHVzaChbXCJmb250LXdlaWdodDogbm9ybWFsXCIsIFwidGV4dC10cmFuc2Zvcm06IG5vbmVcIl0uam9pbihcIjtcIikpO1xuXG4gICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZVxuICAgICAgICBjb25zb2xlLmxvZyhvdXRwdXQuam9pbihcIlwiKSwgLi4uc3R5bGVzKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBMb2dzIGEgd2FybmluZyB0byB0aGUgY2xpZW50LlxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gbG9nLlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fG51bWJlcn0gb3B0aW9ucyBPcHRpb25hbCBvcHRpb25zIGZvciBjaGFuZ2luZyB0aGUgd2F5IG9mIGxvZ2dpbmcuXG4gICAgICovXG4gICAgcHVibGljIHdhcm4obWVzc2FnZTogc3RyaW5nLCBvcHRpb25zID0gRGVidWdnZXJTZXJ2aWNlLldBUk5JTkcpIHtcbiAgICAgICAgdGhpcy5sb2cobWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTG9ncyBhbiBlcnJvciB0byB0aGUgY2xpZW50LlxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gbG9nLlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fG51bWJlcn0gb3B0aW9ucyBPcHRpb25hbCBvcHRpb25zIGZvciBjaGFuZ2luZyB0aGUgd2F5IG9mIGxvZ2dpbmcuXG4gICAgICovXG4gICAgcHVibGljIGVycm9yKG1lc3NhZ2U6IHN0cmluZywgb3B0aW9ucyA9IERlYnVnZ2VyU2VydmljZS5FUlJPUikge1xuICAgICAgICB0aGlzLmxvZyhtZXNzYWdlLCBvcHRpb25zKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IFRZUEUoKSB7XG4gICAgICAgIHJldHVybiBbe1xuICAgICAgICAgICAgZW1vamk6IFwi7aC87b2PXCIsXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIGVtb2ppOiBcIu2gvO2+slwiLFxuICAgICAgICB9LCB7XG4gICAgICAgICAgICBlbW9qaTogXCLtoL3ttKVcIixcbiAgICAgICAgfSwge1xuICAgICAgICAgICAgZW1vamk6IFwi4pqg77iPXCIsXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIGVtb2ppOiBcIu2gve2xje2gvO2/u1wiLFxuICAgICAgICB9XTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IENPUkUoKSB7IHJldHVybiAwOyB9XG4gICAgLy8gc3RhdGljIGdldCBDT01QT05FTlQoKSB7IHJldHVybiAxOyB9XG4gICAgc3RhdGljIGdldCBFUlJPUigpIHsgcmV0dXJuIDI7IH1cbiAgICBzdGF0aWMgZ2V0IFdBUk5JTkcoKSB7IHJldHVybiAzOyB9XG4gICAgLy8gc3RhdGljIGdldCBTVUNDRVNTKCkgeyByZXR1cm4gNDsgfVxufVxuLy8gdHNsaW50OmVuYWJsZVxuIl19